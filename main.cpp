#include <iostream>
#include <cstdlib>
#include <ctime>
#include <vector>
#include <algorithm>

using namespace std;

string Mons[10] = {"Floraburn", "Shockfin", "Frostmoth", "Shadowmind", "Voltbrawler", "Terrafey", "Ironcladore", "Spectrake", "Toxiwarrior", "Metatuff"};

int* picker(int seed, vector<int>& picked)
{
    srand(seed);
    int team[3];

    for (int i = 0; i < 3; i++) {
        int Mon;
        do {
            Mon = rand() % 10;
        } while (find(picked.begin(), picked.end(), Mon) != picked.end());

        picked.push_back(Mon);
        team[i] = Mon;
    }

    int* result = new int[3];
    for (int i = 0; i < 3; i++) {
        result[i] = team[i];
    }

    return result;
}

int main()
{
    vector<int> picked;
    int *team1;
    int *team2;

    srand(time(0));
    int seed1 = rand();
    team1 = picker(seed1, picked);

    int seed2;
    do {
        seed2 = rand();
    } while (seed2 == seed1);

    team2 = picker(seed2, picked);

    string roster1[3] = {Mons[team1[0]], Mons[team1[1]], Mons[team1[2]]};
    string roster2[3] = {Mons[team2[0]], Mons[team2[1]], Mons[team2[2]]};

    cout << "Team 1:\n";
    for (int i = 0; i < 3; i++) {
        cout << roster1[i] << "\n";
    }

    cout << "Team 2:\n";
    for (int i = 0; i < 3; i++) {
        cout << roster2[i] << "\n";
    }

    // Deallocate memory for result arrays
    delete[] team1;
    delete[] team2;

    return 0;
}

/*
Fixed using ChatGPT
The issue is with the usage of static when returning the result. In this case, the static keyword
is causing the result array to retain its state between calls to the picker function, which is why 
you're seeing the same teams in both team1 and team2.

You can remove the static keyword from the result array to ensure that each call to picker generates a unique set of teams.

With this change, the teams generated by each call to the picker function should be unique. 
Also, make sure to deallocate memory for the team1 and team2 arrays at the end of the main function to avoid memory leaks.

Then:
I apologize for the previous issues. It seems there was an issue with the handling of the picked vector between calls to the picker function, 
and it resulted in duplicate Pokémon in the teams. 
To address this and ensure that both teams are unique, here's an updated version of your code:

This updated code should ensure that both teams are unique by correctly managing the picked vector between calls to the picker function. 
It uses a do-while loop to select Pokémon and check for duplicates in the picked vector. 
The code also deallocates memory for the result arrays at the end of the main function.
*/